using BioinformaticsSuite.Module.Services;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Prism.Events;
using Microsoft.Win32;

namespace BioinformaticsSuite.ModuleTests.ViewModels
{
    [TestClass()]
    public class SequenceViewModelTests
    {
        [TestMethod()]
        public void OnClearTest()
        {
            var mockViewModel = SetUpMock();
            mockViewModel.TextBoxInput = "Test";
            string expectedTextBoxInput = "";

            mockViewModel.OnClear();

            Assert.AreEqual(expectedTextBoxInput, mockViewModel.TextBoxInput);
        }

        [TestMethod()]
        public void OnUploadTest()
        {
            //Not easily testable until refactored away from Win32 Dialog boxes.
            Assert.Fail();
        }

        [TestMethod()]
        public void OnSaveTest()
        {
            //Not easily testable until refactored away from Win32 Dialog boxes.
            Assert.Fail();
        }

        [TestMethod()]
        public void DisplayStringSplitterTest()
        {
            var mockViewModel = SetUpMock();
            string testCase =
                "TTAACCCCCTTAGTTCACGGGGTTACTTAAAGGAAGTTATCACGGGGAATCCCACATTGATCTGGCTGGGTCCAACGTTATAATTGGACGACTTTATGCGGCTCGACTGCCAAAGGTGGGCGGGGTCAGATAAGGACAGATGGGGAATGTTCTCTCCCTACTTGTGTATGAATGCGATGATCTGGACGGACACCAGCACACTCTACACGGAGTAAGTCTAACAGATCAGATTGGATGTTCAGAAGGACGTCATGCCGTCGGGATTCCCGAGTTGCGGATATGTCAGAGCACACTATCGGACCGTCGCAGAGGATGTCCAGCAAAAACATCTTACATATTGCTATCCGAAGGACGTCCGGGGACGTTGGCAAACCACAACCGGGGTTTTAGTCTGCACCTGCAAGTTTTGTGTAACTTTCGTGCCTGCACCTCTCCGGGGAGAAAGGTATATCAGCCCTCACTAAAGACGAACCCTATATTCACCCTGTCGTACCGGCCAAAGAATTCCGAGTAGAAGCCCAATGCGTACACGAAAGGTGCGGCAAAGCGAGCGCCTTTCCCGGAGGATCCTATCCCTTACGTCCCTCTCCTCACGCGTCCTCTCCGAATTCGGCACGATATTCCTATGGTGACTTCCCCACGTCGTGTCGTGCTTGGCAGTACGCAGACGTGTCTTGAACGAACAGGTTGTGATGCAAGATAAAGCACGCGGCACCACCGTGGTCTGCGAGCGGTTCAGCGAGCCCATAGTGAAGAGCCGGAATGCGATCTAGAAACAGGTCTCGTGCAGAATATAGGCCTTATGACAATGATCGGTCTCGGCGGGCAGCACGATACCGCTGCCGCAGTTATCTCTCCGCCGTAAGTTTATACCGCAGTAGATTTGAGCTGCAATCGGCATTTCGCAGCTACTAGAGTACCTTTTATGGGCTATGCCCAGGAGGCCGGTGCGCATATAATACGCGTCAAATGCCAAGGACAACCGAGACATGTGAATCCG";
            string expected =
                "TTAACCCCCTTAGTTCACGGGGTTACTTAAAGGAAGTTATCACGGGGAATCCCACATTGATCTGGCTGGGTCCAACGTTA\r\nTAATTGGACGACTTTATGCGGCTCGACTGCCAAAGGTGGGCGGGGTCAGATAAGGACAGATGGGGAATGTTCTCTCCCTA\r\nCTTGTGTATGAATGCGATGATCTGGACGGACACCAGCACACTCTACACGGAGTAAGTCTAACAGATCAGATTGGATGTTC\r\nAGAAGGACGTCATGCCGTCGGGATTCCCGAGTTGCGGATATGTCAGAGCACACTATCGGACCGTCGCAGAGGATGTCCAG\r\nCAAAAACATCTTACATATTGCTATCCGAAGGACGTCCGGGGACGTTGGCAAACCACAACCGGGGTTTTAGTCTGCACCTG\r\nCAAGTTTTGTGTAACTTTCGTGCCTGCACCTCTCCGGGGAGAAAGGTATATCAGCCCTCACTAAAGACGAACCCTATATT\r\nCACCCTGTCGTACCGGCCAAAGAATTCCGAGTAGAAGCCCAATGCGTACACGAAAGGTGCGGCAAAGCGAGCGCCTTTCC\r\nCGGAGGATCCTATCCCTTACGTCCCTCTCCTCACGCGTCCTCTCCGAATTCGGCACGATATTCCTATGGTGACTTCCCCA\r\nCGTCGTGTCGTGCTTGGCAGTACGCAGACGTGTCTTGAACGAACAGGTTGTGATGCAAGATAAAGCACGCGGCACCACCG\r\nTGGTCTGCGAGCGGTTCAGCGAGCCCATAGTGAAGAGCCGGAATGCGATCTAGAAACAGGTCTCGTGCAGAATATAGGCC\r\nTTATGACAATGATCGGTCTCGGCGGGCAGCACGATACCGCTGCCGCAGTTATCTCTCCGCCGTAAGTTTATACCGCAGTA\r\nGATTTGAGCTGCAATCGGCATTTCGCAGCTACTAGAGTACCTTTTATGGGCTATGCCCAGGAGGCCGGTGCGCATATAAT\r\nACGCGTCAAATGCCAAGGACAACCGAGACATGTGAATCCG";

            string actual = mockViewModel.DisplayStringSplitter(testCase);
              
            Assert.AreEqual(expected, actual);
        }

        private MockViewModel SetUpMock()
        {
            ISequenceFactory sequenceFactory = new SequenceFactory();
            ISequenceParser sequenceParser = new SequenceParser(new SequenceValidator());
            IEventAggregator eventAggregator = new EventAggregator();
            MockViewModel mockViewModel = new MockViewModel(sequenceFactory, sequenceParser, eventAggregator);
            return mockViewModel;
        }
    }
}